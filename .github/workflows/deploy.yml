name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install server and root dependencies
      run: npm ci

    - name: Install client dependencies
      working-directory: ./client
      run: npm ci

    - name: Build client app
      working-directory: ./client
      run: npm run build

    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/${{ secrets.PEM_FILE_NAME }}
        chmod 600 ~/.ssh/${{ secrets.PEM_FILE_NAME }}

    - name: Transfer server files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} -r ./server ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

    - name: Transfer server node_modules to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} -r ./node_modules ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/server/

    - name: Transfer client node_modules to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} -r ./client/node_modules ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/client/

    - name: Transfer package.json to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} ./package.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

    - name: Transfer client build files to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} -r ./client/build ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/${{ secrets.PEM_FILE_NAME }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Move server files to the appropriate directory
          sudo mkdir -p /var/www/server
          sudo mv /home/${{ secrets.EC2_USER }}/server/* /var/www/server/

          # Move client build files to the appropriate directory
          sudo mkdir -p /var/www/html
          sudo mv /home/${{ secrets.EC2_USER }}/build/* /usr/share/nginx/html

          # Restart the PM2 process for the server
          pm2 restart /var/www/server/index.js --name my-server

          # Restart Nginx to serve the new build
          sudo systemctl restart nginx
        EOF
