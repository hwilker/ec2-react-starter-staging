user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;
    include /etc/nginx/conf.d/*.conf;

    server {
        server_name ec2-react-starter.com www.ec2-react-starter.com;

        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            try_files $uri $uri/ /index.html;
        }


#this setup only works for apps configured to proceed all routes with '/api/. For apps that don't use 'api' change the line
#proxy_pass http://localhost:5100 by appending a slash at the end.
    location /api/ {
        proxy_pass http://localhost:5100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
}

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ec2-react-starter.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ec2-react-starter.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


    server {
    if ($host = www.ec2-react-starter.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = ec2-react-starter.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name ec2-react-starter.com www.ec2-react-starter.com;
    return 404; # managed by Certbot




}}